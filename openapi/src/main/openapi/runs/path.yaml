runs:
  get:
    summary: Simulation Runs
    tags:
      - Runs
    description: |
      Return the list of the runs for a given simulation.

      Requires at least the `Read` role on the simulation's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/simulation"
    responses:
      '200':
        description: An array of runs
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components.yaml#/schemas/Runs'
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

run:
  get:
    summary: Run
    tags:
      - Runs
    description: |
      Return the detailed information of a run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: The information of a run.
        content:
          application/json:
            schema:
              $ref: 'components.yaml#/schemas/Run'
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

injectors:
  get:
    summary: Run Load Generators
    tags:
      - Runs
    description: |
      Return the list of the load generators for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: An array of load generators
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components.yaml#/schemas/Injector'
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

remotes:
  get:
    summary: Run Remotes
    tags:
      - Runs
    description: |
      Return the list of the remotes for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: An array of remotes
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

hostnames:
  get:
    summary: Run Hostnames
    tags:
      - Runs
    description: |
      Return the list of the hostnames for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: An array of hostnames
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

scenarios:
  get:
    summary: Run Scenarios
    tags:
      - Runs
    description: |
      Return the list of the scenarios for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: An array of scenarios
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

groups:
  get:
    summary: Run Groups
    tags:
      - Runs
    description: |
      Return the list of the groups for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
    responses:
      '200':
        description: An array of groups
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

requests:
  get:
    summary: Run Requests
    tags:
      - Runs
    description: |
      Return the list of the requests for a given run.

      Requires at least the `Read` role on the run's team.
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
      - $ref: "components.yaml#/parameters/requests/group"
    responses:
      '200':
        description: An array of requests
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

metrics:
  get:
    summary: List of metrics available
    tags:
      - Runs
    description: |
      The Metric endpoint returns metrics information.

      Requires at least the `Read` role on the whole organization.
    security:
      - ApiKeyAuth: []
    responses:
      '200':
        description: "An array of metrics. If one of the requirement is the scope, you can prefix the metric with one of the scope options ('all.', 'ok.', or 'ko.') when querying a metric; e.g. 'all.req.mean' for the 'req.mean' metric"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components.yaml#/schemas/Metric'
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'

series:
  get:
    summary: Series data of a run
    description: |
      Series data of a run.

      Requires at least the `Read` role on the run's team.
    tags:
      - Runs
    security:
      - ApiKeyAuth: []
    parameters:
      - $ref: "../common/components.yaml#/parameters/run"
      - name: metric
        in: query
        required: true
        schema:
          type: string
        description: "One of the metrics returned by the /metrics API. If the metric has the 'scope' requirement, you can prefix it with one of the scope options ('all.', 'ok.', or 'ko.'); e.g. 'all.req.mean' for the 'req.mean' metric. If no scope is prefixed, the default scope is 'all.'"
      - name: from
        in: query
        required: false
        schema:
          type: number
        description: "Timestamp (in milliseconds) corresponding to the start of the window you want to select, default value: injection start"
      - name: to
        in: query
        required: false
        schema:
          type: number
        description: "Timestamp (in milliseconds) corresponding to the end of the window you want to select, default value: injection end"
      - name: scenario
        in: query
        required: false
        schema:
          type: string
        description: "Name of the scenario or '*' if you want the data for every scenario, check the metrics endpoint to see if it is needed, default value: `*`"
      - name: group
        in: query
        required: false
        schema:
          type: string
        description: |
          Name of the group. Check the metrics endpoint to see if it is needed.
          - For metrics which also require the 'request' parameter, specifies which group the request is part of. Use an empty value for requests which are not part of a group. Use '\*' together with the '\*' request parameter value (or omit both parameters) for all requests.
          - For metrics which don't require the 'request' parameter, specifies the group the metric applies to.
      - name: request
        in: query
        required: false
        schema:
          type: string
        description: |
          Name of the request. Check the metrics endpoint to see if it is needed.
          
          The group that the request is part of must also be specified (with an empty value if there is no group); see the 'group' parameter. Use the '\*' value together with the '\*' group parameter value (or omit both parameters) for all requests.
      - name: remote
        in: query
        required: false
        schema:
          type: string
        description: "Hostname of the remote or '*' if you want the data for every remote, check the metrics endpoint to see if it is needed, default value: `*`"
      - name: node
        in: query
        required: false
        schema:
          type: string
        description: "Hostname of the load load generator or '*' if you want the data for every load generator, check the metrics endpoint to see if it is needed, default value: `*`"
    responses:
      '200':
        description: Series data
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components.yaml#/schemas/Series'
      '401':
        $ref: '../common/components.yaml#/responses/Unauthorized'
